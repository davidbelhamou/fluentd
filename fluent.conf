# Global settings for verbose logging
<system>
  log_level debug #  log level for all fluentd , (exist also log level per plugin)
  suppress_repeated_stacktrace true # remove duplicate stacktrace
  emit_error_log_interval 1 # emit error log interval
  suppress_config_dump false # print the entire configuration file in the logs at startup
</system>

# Prometheus Monitoring Sources
<source>
  @type prometheus
  @id in_prometheus_monitor
  bind 0.0.0.0
  port 24231
  metrics_path /metrics
</source>

<source>
  @type prometheus_monitor
  @id in_prometheus_monitor_agent
  interval 30
</source>

<source>
  @type prometheus_output_monitor
  @id in_prometheus_output_monitor_agent
  interval 30
</source>

# Tail source for application logs
<source>
  @type tail
  @id in_tail_python_logs
  path /var/log/app/my-logs-*.log
  pos_file /var/log/fluentd/pos/python-logs.pos
  tag python-logs
  read_from_head true
  pos_file_compaction_interval 120 # every 2 minutes remove from pos file deleted or rotated logs
  <parse>
    @type json
  </parse>
  path_key path # add to each record the path of the log file with name "path"
</source>

<filter python-logs>
  @type record_transformer
  enable_ruby true
  <record>
    source_file ${record['path'] ? File.basename(record['path']) : "unknown"} # extract the file name from the path
  </record>
</filter>


# Elasticsearch output to data stream
<match python-logs>
  @type elasticsearch_data_stream
  host elasticsearch
  port 9200
  scheme http
  data_stream_name python-logs
  data_stream_template_name python-logs-template
  log_es_400_reason true
  bulk_message_request_threshold 250 # number of messages to send in a single request
  <buffer>
    @type file
    path /var/log/fluentd/buffer/python-logs.buffer
    flush_mode interval
    flush_thread_count 4 # increased from 2 to 4 for better parallelization
    flush_interval 5s # increased from 1s to 5s to reduce flush frequency
    retry_forever true
    chunk_limit_size 4M # 4 MB
    queue_limit_length 64 # number of chunks into the buffer
    overflow_action block # block the buffer when it's full (avoid losing data)
    flush_thread_interval 0.1 # added to control thread scheduling
    timekey_use_utc true # added to ensure consistent time handling
  </buffer>
</match>
